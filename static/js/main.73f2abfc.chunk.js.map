{"version":3,"sources":["components/Recipe.js","App.js","reportWebVitals.js","index.js"],"names":["Recipe","title","ingredients","image","className","src","alt","map","ingredient","text","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","fetch","process","then","response","json","data","hits","onSubmit","event","preventDefault","type","value","onChange","target","recipe","label","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAqBeA,EAnBA,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,MACnC,OACE,sBAAKC,UAAU,cAAf,UACE,qBAAKC,IAAKF,EAAOG,IAAI,KACrB,sBAAKF,UAAU,OAAf,UACE,6BAAKH,IACL,+CACA,6BACGC,EAAYK,KAAI,SAACC,GAChB,OACE,6BAAKA,EAAWC,mBCqCfC,MA5Cf,WACE,IADa,EAIiBC,mBAAS,IAJ1B,mBAINC,EAJM,KAIGC,EAJH,OAKeF,mBAAS,IALxB,mBAKNG,EALM,KAKEC,EALF,OAMaJ,mBAAS,IANtB,mBAMNK,EANM,KAMCC,EAND,KAQbC,qBAAU,WACRC,MACC,CAACH,IAEJ,IAAMG,EAAa,WACjBC,MAAM,uDAAD,OAAwDJ,EAAxD,mBAZOK,WAYP,oBAXQA,qCAYVC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIZ,EAAWY,EAAKC,UAYlC,OACE,sBAAKtB,UAAU,MAAf,UACE,uBAAMA,UAAU,cAAcuB,SAPjB,SAACC,GAChBA,EAAMC,iBACNZ,EAASH,IAKP,UACE,uBAAOgB,KAAK,OAAO1B,UAAU,aAAa2B,MAAOjB,EAAQkB,SAZ1C,SAACJ,GACpBb,EAAUa,EAAMK,OAAOF,UAYnB,wBAAQD,KAAK,SAAS1B,UAAU,gBAAhC,uBAIF,qBAAKA,UAAU,oBAAf,SACGQ,EAAQL,KAAI,SAAA2B,GAAM,OACjB,cAAC,EAAD,CAAQjC,MAAOiC,EAAOA,OAAOC,MAAOjC,YAAagC,EAAOA,OAAOhC,YAAaC,MAAO+B,EAAOA,OAAO/B,iBC9B5FiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.73f2abfc.chunk.js","sourcesContent":["import './Recipe.css';\n\nconst Recipe = ({title, ingredients, image}) => {\n  return(\n    <div className='recipe-card'>\n      <img src={image} alt=\"\" />\n      <div className=\"info\">\n        <h3>{title}</h3>\n        <p> Ingredients: </p>\n        <ul>\n          {ingredients.map((ingredient) => {\n            return (\n              <li>{ingredient.text}</li>\n            );\n          })}\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nexport default Recipe\n","import { useEffect, useState } from 'react';\nimport './App.css';\nimport Recipe from './components/Recipe'\n\n\nfunction App() {\n  const appId = process.env.REACT_APP_APP_ID;;\n  const appKey = process.env.REACT_APP_API_KEY;;\n\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState('');\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    getRecipes();\n  }, [query]);\n\n  const getRecipes = () => {\n    fetch(`https://api.edamam.com/api/recipes/v2?type=public&q=${query}&app_id=${appId}&app_key=${appKey}`)\n      .then(response => response.json())\n      .then(data => setRecipes(data.hits));\n  };\n\n  const updateSearch = (event) => {\n    setSearch(event.target.value);\n  };\n\n  const getQuery = (event) => {\n    event.preventDefault();\n    setQuery(search);\n  }\n\n  return (\n    <div className=\"App\">\n      <form className=\"search-form\" onSubmit={getQuery}>\n        <input type=\"text\" className=\"search-bar\" value={search} onChange={updateSearch}/>\n        <button type=\"submit\" className=\"search-button\">\n          Search\n        </button>\n      </form>\n      <div className=\"recipes-container\">\n        {recipes.map(recipe => (\n          <Recipe title={recipe.recipe.label} ingredients={recipe.recipe.ingredients} image={recipe.recipe.image}/>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}